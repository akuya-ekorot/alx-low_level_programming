# Requirements
# 	name of the executable: school
#	rules: all, clean, fclean, oclean, re
#		all: builds your executable
#		clean: deletes all emacs and vim temp files along with the executable
#		oclean: deletes the object files
#		fclean: deletes all emacs and vim temp files, the executable and the object files
#		re: force recompilation of all source files
#	variables: CC, SRC, OBJ, NAME, RM, CFLAGS
#		CC: the compiler used
#		SRC: the .c files
#		OBJ: the .o files
# 		NAME: the name of the executable
#		RM: the program to delete files
#		CFLAGS: your favourite compiler flags: -Wall -Werror -Wextra -pedantic
#	the all rule should recompile only the updated source files
#	the clean, oclean, fclean, re rules should never fail

CC = gcc
SRC = main.c school.c
OBJ = ${SRC:.c=.o}
NAME = school
RM = rm
CFLAGS = -Wall -Werror -Wextra -pedantic

all: ${NAME}

${NAME}: ${OBJ}
	${CC} ${OBJ} -o $@

${OBJ}: %.o: %.c
	${CC} ${CFLAGS} -c -o $@ $<

re: oclean all

fclean: clean oclean

clean:
	${RM} -f ${NAME} *~ \#*\#

oclean:
	${RM} -f ${OBJ}
